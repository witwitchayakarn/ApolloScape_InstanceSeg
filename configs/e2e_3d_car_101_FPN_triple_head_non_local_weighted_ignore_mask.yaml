MODEL:
  TYPE: generalized_rcnn
  CONV_BODY: FPN.fpn_ResNet101_conv5_body
  FASTER_RCNN: True
  MASK_ON: False
  MASK_TRAIN_ON: False   # Whether we train the mask
  CAR_CLS_HEAD_ON: True
  TRANS_HEAD_ON: True
  NON_LOCAL_TEST: True
  # For not weighted W_theta * W_phi.t() :
  # W.mean() = 1.00000e-07 * 3.3739
  # W.std() =  1.00000e-04 * 4.1553)

NUM_GPUS: 4
SOLVER:
  WEIGHT_DECAY: 0.0001
  LR_POLICY: steps_with_decay
  BASE_LR: 0.001
  GAMMA: 0.1
  MAX_ITER: 80000
  STEPS: [0, 20000, 40000]
  WARM_UP_ITERS: 1000
  WARM_UP_FACTOR_TRANS: 0.01  #Warm up factor for 3d car translation

FPN:
  FPN_ON: True
  FPN_LOSS_SHOW: False
  MULTILEVEL_ROIS: True
  MULTILEVEL_RPN: True
  NON_LOCAL: True
  NON_LOCAL_WEIGHTED: True   # Use input/sqrt(dim_in)

FAST_RCNN:
  ROI_BOX_HEAD: fast_rcnn_heads.roi_2mlp_head
  ROI_XFORM_METHOD: RoIAlign
  ROI_XFORM_RESOLUTION: 7
  ROI_XFORM_SAMPLING_RATIO: 2

CAR_CLS:
  ROI_BOX_HEAD: car_3d_pose_heads.roi_car_cls_rot_head
  ROI_XFORM_METHOD: RoIAlign
  ROI_XFORM_RESOLUTION: 7
  ROI_XFORM_SAMPLING_RATIO: 2
  CLS_SPECIFIC_ROT: False # Use class specific mask predictions if True (otherwise use class agnostic rot predictions)
  QUAT_NORM: True  # Normalise quaternion output to unit length.
  SIM_MAT_LOSS: False

  ROT_LOSS: 'L1'   # ['MSE', 'L1', 'ARCCOS']
  CAR_CLS_LOSS_BETA: 0.1   # For ARCOS better set as 0.1 (as degree)
  ROT_LOSS_BETA: 1.0   # For ARCOS better set as 0.1 (as degree)
  ROT_MIN: (-3.14052, -1.55991,  -3.14159)
  ROT_MAX: (1.1784, 1.55723, 3.14158)

TRANS_HEAD:
  TRANS_HEAD: car_3d_pose_heads.bbox_2mlp_head
  INPUT_CONV_BODY: False
  INPUT_TRIPLE_HEAD: True

  INPUT_DIM: 4
  OUTPUT_DIM: 3
  MLP_HEAD_DIM: 100
  LOSS: 'HUBER'   # ['MSE', 'L1', 'HUBER']  #'HUBER' loss
  TRANS_LOSS_BETA: 0.1
  NORMALISE: False
  IPUT_NORM_BY_INTRINSIC: True
  CAMERA_INTRINSIC: (2304.54786556982, 2305.875668062, 1686.23787612802, 1354.98486439791)

MRCNN:
  ROI_MASK_HEAD: mask_rcnn_heads.mask_rcnn_fcn_head_v1up4convs
  RESOLUTION: 28  # (output mask resolution) default 14
  ROI_XFORM_METHOD: RoIAlign
  ROI_XFORM_RESOLUTION: 14  # default 7
  ROI_XFORM_SAMPLING_RATIO: 2  # default 0
  DILATION: 1  # default 2
  CONV_INIT: MSRAFill  # default GaussianFill

TRAIN:
  #SCALES: (800,)
#  SCALES: (1600, 2000)  # If it's 0, means that we don't resize it
#  MAX_SIZE: 2000
  #SCALES: (1500, 2710)  # 2300*3384/2710~=1800, 2710 is the max size for shortest side. If it's 0, means that we don't resize it
  #MAX_SIZE: 2000 #   3384  # max size for longest side
  SCALES: (0, )
  MAX_SIZE: 2400
  RPN_PRE_NMS_TOP_N: 1000  # Per FPN level, 2000 default
  CE_FINETUNE_WIGHT: ( 1,  1.20,    6.4,         14.35,      1.   , 2.48,   1.53427976,    4.088)
  SNAPSHOT_ITERS: 1000

  BATCH_SIZE_PER_IM: 100 # we don't have so many cars per image and we care about positive clas
  CE_CAR_CLS_FINETUNE_WIGHT: [ 1.2 ,  3.74, 12.03,  5.08,  6.69, 11.7 , 20.25,  0.37, 14.32,
       14.24, 84.02, 14.78,  9.46, 13.62,  1.51,  9.96, 43.84,  1.83,
        4.65,  6.62, 11.54,  0.6 ,  6.73, 29.48,  7.82,  5.55, 12.36,
       25.85,  8.63,  6.49,  4.13,  2.6 ,  6.3 , 10.84]  # Find tune car according to it's appearance
  CAR_MODELS: [2,  6,  7,  8,  9, 12, 14, 16, 18, 19, 20, 23, 25, 27, 28, 31, 32, 35, 37,  40, 43, 46, 47, 48, 50, 51, 54, 56, 60, 61, 66, 70, 71, 76]
  FREEZE_CONV_BODY: False
  FREEZE_RPN: False
  FREEZE_FPN: False
  IGNORE_MASK: True

TEST:
  SCORE_THRESH: 0.1
  SCALE: 0  # 2710
  MAX_SIZE: 2400  # 3384
  NMS: 0.5

  DETECTIONS_PER_IM: 200
  SCORE_THRESH_FOR_TRUTH_DETECTION: 0.1

  RPN_PRE_NMS_TOP_N: 2000  # Per FPN level
  RPN_POST_NMS_TOP_N: 2000  # 1000 default
  BBOX_VOTE:
    ENABLED: True
    VOTE_TH: 0.9
  BBOX_AUG:
    ENABLED: True
    SCORE_HEUR: UNION
    COORD_HEUR: UNION
    H_FLIP: True
    SCALES: (1500, 1900, 2300) # we don't need 3384 because the first SCALE include it!
    MAX_SIZE: 3384
    SCALE_H_FLIP: True
    SCALE_SIZE_DEP: False
    ASPECT_RATIOS: ()
    ASPECT_RATIO_H_FLIP: False

  CAR_CLS_AUG:
    ENABLED: True
    SCALES: (1500, 1900, 2300) # we don't need 3384 because the first SCALE include it!
    MAX_SIZE: 3384
    H_FLIP: False
    SCALE_H_FLIP: False

  GEOMETRIC_TRANS: False # Using "SSD-6D: Making RGB-Based 3D Detection and 6D Pose Estimation Great Again" CVPR for estimating Trans

